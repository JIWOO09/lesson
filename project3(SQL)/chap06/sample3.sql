SELECT * FROM DUAL;
/*
1. 학생별 2009년도 평균 학점을 저장한 테이블 생성하기.
   (년도, 학번, 이름, 평균학점 컬럼 필요)
*/

-- 테이블 생성과 동시에 데이터 추가
CREATE TABLE STD_AVG_POINT AS
SELECT SUBSTR(B.TERM_NO, 1, 4) AS 년도
     , A.STUDENT_NO AS 학번
     , A.STUDENT_NAME AS 이름
     , AVG(B.POINT) AS 평균
  FROM TB_STUDENT A JOIN TB_GRADE B
    ON A.STUDENT_NO = B.STUDENT_NO
 WHERE B.TERM_NO LIKE '2009%'
 GROUP BY SUBSTR(B.TERM_NO, 1, 4), A.STUDENT_NO, A.STUDENT_NAME;

CREATE TABLE STD_AVG_POINT(
      년도 VARCHAR2(4) NOT NULL
    , 학번 VARCHAR2(10) NOT NULL
    , 이름 VARCHAR2(50) NOT NULL
    , 평균 NUMBER(3,2)
);
INSERT INTO STD_AVG_POINT (
    SELECT SUBSTR(B.TERM_NO, 1, 4) AS 년도
     , A.STUDENT_NO AS 학번
     , A.STUDENT_NAME AS 이름
     , AVG(B.POINT) AS 평균
  FROM TB_STUDENT A JOIN TB_GRADE B
    ON A.STUDENT_NO = B.STUDENT_NO
 WHERE B.TERM_NO LIKE '2009%'
 GROUP BY SUBSTR(B.TERM_NO, 1, 4), A.STUDENT_NO, A.STUDENT_NAME
);


/*
2. 학과별 학생 인원수와 교수 인원수를 저장한 테이블 생성하기.
   (학과코드, 학과명, 학생 인원수, 교수 인원수 컬럼 필요)
*/
CREATE TABLE DEPT_STD_PRO_COUNT AS
SELECT C.DEPARTMENT_NO AS 학과코드
     , C.DEPARTMENT_NAME AS 학과명
     , C.학생수
     , COUNT(D.PROFESSOR_NO) AS 교수인원수
  FROM (SELECT B.DEPARTMENT_NO
             , B.DEPARTMENT_NAME
             , COUNT(A.STUDENT_NO) AS 학생수
          FROM TB_STUDENT A JOIN TB_DEPARTMENT B
            ON A.DEPARTMENT_NO = B.DEPARTMENT_NO
         GROUP BY B.DEPARTMENT_NO, B.DEPARTMENT_NAME) C JOIN TB_PROFESSOR D
    ON C.DEPARTMENT_NO = D.DEPARTMENT_NO
 GROUP BY C.DEPARTMENT_NO, C.DEPARTMENT_NAME, C.학생수
 ORDER BY 1;

SELECT B.DEPARTMENT_NO
     , B.DEPARTMENT_NAME
     , COUNT(DISTINCT A.STUDENT_NO) AS 학생수
     , COUNT(DISTINCT C.PROFESSOR_NO) AS 교수인원
  FROM TB_STUDENT A JOIN TB_DEPARTMENT B
    ON A.DEPARTMENT_NO = B.DEPARTMENT_NO
  JOIN TB_PROFESSOR C
    ON B.DEPARTMENT_NO = C.DEPARTMENT_NO
 GROUP BY B.DEPARTMENT_NO, B.DEPARTMENT_NAME
 ORDER BY 1;

/*
3. 1, 2번에서 생성한 테이블을 사용하여 Java OJDBC 로 조회하여 출력하는 코드를 만든다.
       - [StudentAvg [번호="A000000", 이름="홍길동", 평균학점=3.7], StudentAvg [ ... ], ...]
       - [DeptInfo [학과코드="001", 학과명="XXXX학과", 학생수=25, 교수인원=5], DeptInfo [ ... ], ...]
*/

/*
VIEW 로 만들기
*/
CREATE VIEW V_STD_AVG_POINT AS
SELECT SUBSTR(B.TERM_NO, 1, 4) AS 년도
     , A.STUDENT_NO AS 학번
     , A.STUDENT_NAME AS 이름
     , AVG(B.POINT) AS 평균
  FROM TB_STUDENT A JOIN TB_GRADE B
    ON A.STUDENT_NO = B.STUDENT_NO
 WHERE B.TERM_NO LIKE '2009%'
 GROUP BY SUBSTR(B.TERM_NO, 1, 4), A.STUDENT_NO, A.STUDENT_NAME;


CREATE OR REPLACE FORCE VIEW V_DEPT_STD_PRO_COUNT AS
SELECT B.DEPARTMENT_NO
     , B.DEPARTMENT_NAME
     , COUNT(DISTINCT A.STUDENT_NO) AS 학생수
     , COUNT(DISTINCT C.PROFESSOR_NO) AS 교수인원
  FROM TB_STUDENT A JOIN TB_DEPARTMENT B
    ON A.DEPARTMENT_NO = B.DEPARTMENT_NO
  JOIN TB_PROFESSOR C
    ON B.DEPARTMENT_NO = C.DEPARTMENT_NO
 GROUP BY B.DEPARTMENT_NO, B.DEPARTMENT_NAME
 ORDER BY 1
WITH READ ONLY;
--WITH CHECK OPTION;


SELECT * FROM V_STD_AVG_POINT;
SELECT * FROM V_DEPT_STD_PRO_COUNT;

SELECT * FROM USER_VIEWS WHERE VIEW_NAME = 'V_STD_AVG_POINT';



CREATE TABLE SAMPLE_T (
     id NUMBER NOT NULL
   , name VARCHAR2(10)
   , age NUMBER
);

INSERT INTO SAMPLE_T VALUES(1, '홍길동', 30);
INSERT INTO SAMPLE_T VALUES(2, NULL, 24);
INSERT INTO SAMPLE_T VALUES(3, '김정훈', NULL);

CREATE VIEW V_SAMPLE_T AS
SELECT id, name FROM SAMPLE_T;

CREATE VIEW V_SAMPLE_T2 AS
SELECT id, age FROM SAMPLE_T WHERE age BETWEEN 0 AND 100
WITH CHECK OPTION;

SELECT * FROM V_SAMPLE_T;
INSERT INTO V_SAMPLE_T VALUES(4, '박주원');

SELECT * FROM V_SAMPLE_T2;
INSERT INTO V_SAMPLE_T2 VALUES(5, 32);
INSERT INTO V_SAMPLE_T2 VALUES(6, 150);

SELECT * FROM SAMPLE_T;